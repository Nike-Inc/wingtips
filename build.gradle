// ========== GRADLE PLUGINS / REPOSITORIES SETUP
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // STUFF FOR JACOCO
        classpath 'com.palantir:jacoco-coverage:0.4.0'
        // jacoco-coverage blows up unless you specify guava dependency
        classpath 'com.google.guava:guava:18.0'
        // Plugin for spitting out coverage numbers to the console
        classpath 'com.github.ksoichiro:gradle-console-reporter:0.5.0'

        // STUFF FOR BINTRAY
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'project-report'

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: classes) {
        classifier = 'javadoc'
        from javadoc
    }

    javadoc {
        failOnError = false
    }

    artifacts {
        archives sourcesJar, javadocJar
    }

    repositories {
        // temporary until next zipkin release
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
        jcenter()
    }

    idea {
        module {
            downloadSources = true
        }
    }

    // http://www.gradle.org/docs/current/userguide/java_plugin.html
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

// Disable jar, sourcesJar, and javadoc tasks for the root project - we only want them to run for submodules
jar.enabled = false
sourcesJar.enabled = false
javadocJar.enabled = false

// ========== PROPERTIES FOR GRADLE BUILD - DEPENDENCY VERSIONS / ETC
ext {
    slf4jVersion = '1.7.25'
    servletApiVersion = '3.0.1'
    zipkinVersion = '2.9.5-SNAPSHOT'
    springVersion = '4.3.7.RELEASE'
    springbootVersion = '1.5.2.RELEASE'
    apacheHttpClientVersion = '4.4.1'

    nikeInternalUtilVersion = '0.9.0.1'

    junitVersion = '4.11'
    mockitoVersion = '1.9.5'
    logbackVersion = '1.2.3'
    jacksonVersion = '2.4.2'
    assertJVersion = '2.5.0'
    junitDataproviderVersion = '1.10.1'
    restAssuredVersion = '3.0.1'
    apacheCommonsIoVersion = '2.5'

    jettyVersion = '9.3.21.v20170918'

    // JACOCO PROPERTIES
    jacocoToolVersion = '0.7.6.201602180812'
    // Anything in this jacocoExclusions list will be excluded from coverage reports.
    jacocoExclusions = []
    jacocoCoverageThresholdSetup = {
        // We have to split out the wingtips-zipkin coverage numbers because (1) it doesn't contain much code, and (2) uses some features
        //      like try-with-resources that generate many many branches in the bytecode that are realistically impossible to get coverage for.
        //      The combination of those issues mean we get artificially low coverage numbers even though it's clean correct code, so we just
        //      have to visually verify it.
        configure(subprojects.findAll { !it.name.contains("wingtips-zipkin") && !it.name.startsWith("sample") && !it.name.startsWith("testonly")}) {
            jacocoCoverage {
                // Enforce minimum code coverage. See https://github.com/palantir/gradle-jacoco-coverage for the full list of options.
                reportThreshold 0.95, INSTRUCTION
                reportThreshold 0.95, BRANCH
            }
        }
        configure(subprojects.findAll { it.name.contains("wingtips-zipkin") }) {
            jacocoCoverage {
                // Enforce minimum code coverage. See https://github.com/palantir/gradle-jacoco-coverage for the full list of options.
                reportThreshold 0.8, INSTRUCTION
                reportThreshold 0.5, BRANCH
            }
        }
    }

    // BINTRAY STUFF
    bintrayUser = project.hasProperty('bintrayUser') ? property('bintrayUser') : 'UNDEFINED'
    bintrayKey = project.hasProperty('bintrayKey') ? property('bintrayKey') : 'UNDEFINED'
    bintrayVersion = "$version"
}

// ========== COMBO TEST REPORT - View the combined/merged report at: [project_root]/build/reports/tests/index.html
apply from: file(rootProject.projectDir.getAbsolutePath() + '/gradle/junitComboTestReport.gradle')

// ========== JACOCO SETUP - View the combined/merged report at: [project_root]/build/reports/jacoco/jacocoRootReport/html/index.html.
//                           Individual reports for each submodule can be found at: [project_root]/[submodule]/build/reports/jacoco/test/html/index.html
apply from: file(rootProject.projectDir.getAbsolutePath() + '/gradle/jacoco.gradle')

// ========== BINTRAY PUBLISHING
apply from: file(rootProject.projectDir.getAbsolutePath() + '/gradle/bintrayPublishing.gradle')

// ========== MISCELLANEOUS BUILD STUFF
allprojects {
    group = groupId // Necessary for the maven install task to function correctly
}
